{"version":3,"sources":["publishing.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","windowWidth","wrapperTopCoords","profitsBlockCoords","openedInfoBlock","mobileWidth","infoBlocksDesiredOffset","cloudsMovingDistance","line","document","querySelector","console","log","getComputedStyle","lineWidth","parseInt","height","wrapper","infoBlocksWrapper","profitsBlock","infoBlocks","querySelectorAll","points","pointerWidth","width","profitItems","getItemsCoords","items","itemsCoords","forEach","item","itemCoords","getBoundingClientRect","coordsObj","top","left","bottom","right","push","getItemsStyle","property","itemsStyle","itemStyle","setInfoBlocksBehaviour","pointsCoords","profitItemsCoords","getNeededCoords","documentElement","clientWidth","point","pointCoords","y","window","addEventListener","positionInfoBlockMobile","drawLine","lineCoords","a","b","Math","sqrt","deg","PI","atan2","style","concat","transform","resetInfoTopCoordsToInitial","clientHeight","e","target","closest","dataset","idx","classList","add","showInfoBlock","profitsBlockOffset","positionInfoBlockDesktop","remove","hideInfoBlock","animateClouds","windowHeight","halfWindowHeight","round","clouds","cloudsCoords","cloud"],"mappings":"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","file":"publishing-min.js","sourcesContent":["let windowWidth, wrapperTopCoords, profitsBlockCoords, openedInfoBlock = null;\nconst mobileWidth = 768;\nconst infoBlocksDesiredOffset = 20;\nconst cloudsMovingDistance = -70;\nconst line = document.querySelector('.profit__connector');\nconsole.log(getComputedStyle(line));\nconst lineWidth = parseInt(getComputedStyle(line).height);\nconst wrapper = document.querySelector('.profit__wrapper');\nconst infoBlocksWrapper = document.querySelector('.profit__info-wrapper');\nconst profitsBlock = document.querySelector('.profit__items');\nconst infoBlocks = [...document.querySelectorAll('.profit__info')];\nconst points = [...document.querySelectorAll('.profit__pointer')];\nconst pointerWidth = parseInt(getComputedStyle(points[0]).width);\nconst profitItems = [...document.querySelectorAll('.profit__item')];\n\nconst getItemsCoords = (items) => {\n  const itemsCoords = [];\n\n  items.forEach(item => {\n    const itemCoords = item.getBoundingClientRect();\n    const coordsObj = {\n      top: itemCoords.top,\n      left: itemCoords.left,\n      bottom: itemCoords.bottom,\n      right: itemCoords.right\n    };\n    itemsCoords.push(coordsObj);\n  })\n\n  return itemsCoords;\n}\n\nconst getItemsStyle = (items, property) => {\n  const itemsStyle = [];\n  items.forEach(item => {\n    const itemStyle = parseInt(getComputedStyle(item)[property]);\n    itemsStyle.push(itemStyle);\n  })\n\n  return itemsStyle;\n}\n\n// Блок с дополнительной информацией по каждому \"сектору\" горы\n\nconst setInfoBlocksBehaviour = () => {\n  const pointsCoords = [];\n  const profitItemsCoords = [];\n\n  const getNeededCoords = () => {\n    windowWidth = document.documentElement.clientWidth;\n    wrapperTopCoords = wrapper.getBoundingClientRect().top;\n    profitItemsCoords.length = 0;\n    pointsCoords.length = 0;\n\n    if (windowWidth > mobileWidth) {\n      profitsBlockCoords = profitsBlock.getBoundingClientRect().top;\n      points.forEach((point => {\n        const pointCoords = point.getBoundingClientRect();\n        pointsCoords.push({\n          top: pointCoords.top,\n          left: pointCoords.left,\n          bottom: pointCoords.bottom,\n          right: pointCoords.right\n        });\n      }));\n    } else {\n      profitItems.forEach((item => {\n        const itemCoords = item.getBoundingClientRect();\n        profitItemsCoords.push(itemCoords.y - wrapperTopCoords);\n      }));\n    }\n  };\n\n  window.addEventListener(\"scroll\", () => {\n    getNeededCoords();\n    if (openedInfoBlock && windowWidth <= mobileWidth) positionInfoBlockMobile(openedInfoBlock);\n    if (openedInfoBlock && windowWidth > mobileWidth) {\n      resetInfoTopCoordsToInitial;\n      drawLine(openedInfoBlock);\n    }\n  })\n\n  getNeededCoords();\n\n  const drawLine = (i) => {\n    const lineCoords = line.getBoundingClientRect();\n    const a = pointsCoords[i].bottom - pointerWidth / 2 - lineCoords.top - lineWidth / 2;\n    const b = pointsCoords[i].left + pointerWidth / 2 - lineCoords.left + lineWidth / 2;\n    const width = Math.sqrt(a * a + b * b);\n    let deg = 180 / Math.PI * Math.atan2(a, b);\n    deg = (deg + 360) % 360;\n    line.style.width = width + 'px';\n    line.style[\"-moz-transform\"] = `rotate(${deg}deg)`;\n    line.style[\"-o-transform\"] = `rotate(${deg}deg)`;\n    line.style[\"-ms-transform\"] = `rotate(${deg}deg)`;\n    line.style[\"-webkit-transform\"] = `rotate(${deg}deg)`;\n    line.style.transform = `rotate(${deg}deg)`;\n  };\n\n  const rotateLineToInitial = () => {\n    line.style[\"-moz-transform\"] = \"\";\n    line.style[\"-o-transform\"] = \"\";\n    line.style[\"-ms-transform\"] = \"\";\n    line.style[\"-webkit-transform\"] = \"\";\n    line.style.transform = \"\";\n  };\n\n  const resetInfoTopCoordsToInitial = () => {\n    infoBlocksWrapper.style.top = (windowWidth > mobileWidth) ? \"\" : 0;\n  };\n\n  const showInfoBlock = (i) => {\n    infoBlocksWrapper.classList.add('profit__info-wrapper_visible');\n    infoBlocks[i].classList.add('profit__info_visible');\n    openedInfoBlock = i;\n  };\n\n  const positionInfoBlockMobile = (i) => {\n    if (i == 0) infoBlocksWrapper.style.top = profitItemsCoords[3] - infoBlocksWrapper.clientHeight + 'px';\n    else if (i == 1) infoBlocksWrapper.style.top = profitItemsCoords[2] + 'px';\n    else infoBlocksWrapper.style.top = profitItemsCoords[i] - infoBlocksWrapper.clientHeight + 'px';\n  };\n\n  const positionInfoBlockDesktop = () => {\n    if (profitsBlockCoords < 0) {\n      const profitsBlockOffset = profitsBlockCoords - wrapperTopCoords;\n      infoBlocksWrapper.style.top = -profitsBlockCoords + profitsBlockOffset + infoBlocksDesiredOffset + \"px\";\n    }\n  }\n\n  const hideInfoBlock = (i) => {\n    infoBlocksWrapper.classList.remove('profit__info-wrapper_visible');\n    infoBlocks[i].classList.remove('profit__info_visible');\n    resetInfoTopCoordsToInitial();\n    openedInfoBlock = null;\n  };\n\n  const showProfitInfo = (e) => {\n    if (document.documentElement.clientWidth !== windowWidth) getNeededCoords();\n    const target = e.target.closest('.profit__item');\n    if (!target) return;\n    const i = target.dataset.idx;\n    showInfoBlock(i);\n    if (windowWidth > mobileWidth) {\n      positionInfoBlockDesktop();\n      drawLine(i);\n    }\n    else positionInfoBlockMobile(i);\n  };\n\n  const hideProfitInfo = (e) => {\n    const target = e.target.closest('.profit__item');\n    if (!target) return;\n    const i = target.dataset.idx;\n    hideInfoBlock(i);\n    rotateLineToInitial();\n  };\n\n  profitsBlock.addEventListener('mouseover', showProfitInfo);\n  profitsBlock.addEventListener('mouseout', hideProfitInfo);\n}\n\n// Анимация облаков в блоке с горой\n\nconst animateClouds = () => {\n  const windowHeight = document.documentElement.clientHeight;\n  const halfWindowHeight = Math.round(windowHeight / 2);\n  const clouds = [...document.querySelectorAll(\".profit__cloud\")];\n  const cloudsCoordsLeft = getItemsStyle(clouds, \"left\");\n  let cloudsCoords = getItemsCoords(clouds);\n\n  const animateCloudsOnScroll = () => {\n    clouds.forEach((cloud, i) => {\n      if (cloudsCoords[i].top <= halfWindowHeight) {\n        console.log(\"eee\");\n        cloud.style[\"-moz-transform\"] = `translateX(${cloudsMovingDistance}px)`;\n        cloud.style[\"-o-transform\"] = `translateX(${cloudsMovingDistance}px)`;\n        cloud.style[\"-ms-transform\"] = `translateX(${cloudsMovingDistance}px)`;\n        cloud.style[\"-webkit-transform\"] = `translateX(${cloudsMovingDistance}px)`;\n        cloud.style.transform = `translateX(${cloudsMovingDistance}px)`;\n      }\n      if (cloudsCoords[i].top > halfWindowHeight) {\n        cloud.style[\"-moz-transform\"] = \"\";\n        cloud.style[\"-o-transform\"] = \"\";\n        cloud.style[\"-ms-transform\"] = \"\";\n        cloud.style[\"-webkit-transform\"] = \"\";\n        cloud.style.transform = \"\";\n      }\n    })\n\n  }\n\n  window.addEventListener(\"scroll\", () => {\n    cloudsCoords = getItemsCoords(clouds);\n    animateCloudsOnScroll();\n  })\n};\n\n\nsetInfoBlocksBehaviour();\nanimateClouds();\n\n\n"]}